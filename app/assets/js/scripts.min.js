/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2016. MIT licensed.
 */
!function(t,e,s,n){"use strict";t(function(){t("select.site-select").change(function(){t(".json-results").html("");var e=t("select[name=dropdown]").val();t(".site-title").html("<h1>"+e+"</h1>"),t.getJSON(e+"/products.json",function(s){t.each(s,function(s,n){0===n.length?t(".json-results").html("<h1>No Products Yet</h1>"):t.each(n,function(s,n){t(".json-results").append('<div class="product"><h3>'+n.title+'</h3><img src="'+n.images[0].src+'" /><li> '+n.tags+'</li><a target=_blank href="'+e+"/products/"+n.handle+'">PRODUCT PAGE</a><br /></div><br />'),t.each(n.variants,function(s,n){t(".json-results").append('<div class="variants"><a target=_blank href="'+e+"/cart/"+n.id+':1">'+n.title+"</a> "+n.available+" "+n.price+"</div>")})})})}).fail(function(){t(".json-results").append("<li>An Error Occurred. Check site for details.</li>")})}),t('button[name="refresh"]').on("click",function(){t(".json-results").html("");var e=t("select[name=dropdown]").val();t(".site-title").html("<h1>"+e+"</h1>"),t.getJSON(e+"/products.json",function(s){t.each(s,function(s,n){0===n.length?t(".json-results").html("<h1>No Products Yet</h1>"):t.each(n,function(s,n){t(".json-results").append('<div class="product"><h3>'+n.title+'</h3><img src="'+n.images[0].src+'" /><li> '+n.tags+'</li><a target=_blank href="'+e+"/products/"+n.handle+'">PRODUCT PAGE</a><br /></div><br />'),t.each(n.variants,function(s,n){t(".json-results").append('<div class="variants"><a target=_blank href="'+e+"/cart/"+n.id+':1">'+n.title+"</a> "+n.available+" "+n.price+"</div>")})})})}).fail(function(){t(".json-results").append("<li>An Error Occurred. Check site for details.</li>")})})})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsiJCIsIndpbmRvdyIsImRvY3VtZW50IiwidW5kZWZpbmVkIiwiY2hhbmdlIiwiaHRtbCIsInNpdGUiLCJ2YWwiLCJnZXRKU09OIiwiZGF0YSIsImVhY2giLCJrZXkiLCJsZW5ndGgiLCJpbmRleCIsImFwcGVuZCIsInRpdGxlIiwiaW1hZ2VzIiwic3JjIiwidGFncyIsImhhbmRsZSIsInZhcmlhbnRzIiwidmFyaWFudCIsImlkIiwiYXZhaWxhYmxlIiwicHJpY2UiLCJmYWlsIiwib24iLCJqUXVlcnkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0NBQUEsU0FBQUEsRUFBQUMsRUFBQUMsRUFBQUMsR0FFQSxZQUVBSCxHQUFBLFdBQ0FBLEVBQUEsc0JBQUFJLE9BQUEsV0FDQUosRUFBQSxpQkFBQUssS0FBQSxHQUNBLElBQUFDLEdBQUFOLEVBQUEseUJBQUFPLEtBQ0FQLEdBQUEsZUFBQUssS0FBQSxPQUFBQyxFQUFBLFNBQ0FOLEVBQUFRLFFBQUFGLEVBQUEsaUJBQUEsU0FBQUcsR0FDQVQsRUFBQVUsS0FBQUQsRUFBQSxTQUFBRSxFQUFBRixHQUNBLElBQUFBLEVBQUFHLE9BQ0FaLEVBQUEsaUJBQUFLLEtBQUEsNEJBRUFMLEVBQUFVLEtBQUFELEVBQUEsU0FBQUksRUFBQUosR0FDQVQsRUFBQSxpQkFBQWMsT0FBQSw0QkFBQUwsRUFBQU0sTUFBQSxrQkFBQU4sRUFBQU8sT0FBQSxHQUFBQyxJQUFBLFlBQUFSLEVBQUFTLEtBQUEsK0JBQUFaLEVBQUEsYUFBQUcsRUFBQVUsT0FBQSx3Q0FDQW5CLEVBQUFVLEtBQUFELEVBQUFXLFNBQUEsU0FBQVQsRUFBQVUsR0FDQXJCLEVBQUEsaUJBQUFjLE9BQUEsZ0RBQUFSLEVBQUEsU0FBQWUsRUFBQUMsR0FBQSxPQUFBRCxFQUFBTixNQUFBLFFBQUFNLEVBQUFFLFVBQUEsSUFBQUYsRUFBQUcsTUFBQSxrQkFNQUMsS0FBQSxXQUNBekIsRUFBQSxpQkFBQWMsT0FBQSwyREFHQWQsRUFBQSwwQkFBQTBCLEdBQUEsUUFBQSxXQUNBMUIsRUFBQSxpQkFBQUssS0FBQSxHQUNBLElBQUFDLEdBQUFOLEVBQUEseUJBQUFPLEtBQ0FQLEdBQUEsZUFBQUssS0FBQSxPQUFBQyxFQUFBLFNBQ0FOLEVBQUFRLFFBQUFGLEVBQUEsaUJBQUEsU0FBQUcsR0FDQVQsRUFBQVUsS0FBQUQsRUFBQSxTQUFBRSxFQUFBRixHQUNBLElBQUFBLEVBQUFHLE9BQ0FaLEVBQUEsaUJBQUFLLEtBQUEsNEJBRUFMLEVBQUFVLEtBQUFELEVBQUEsU0FBQUksRUFBQUosR0FDQVQsRUFBQSxpQkFBQWMsT0FBQSw0QkFBQUwsRUFBQU0sTUFBQSxrQkFBQU4sRUFBQU8sT0FBQSxHQUFBQyxJQUFBLFlBQUFSLEVBQUFTLEtBQUEsK0JBQUFaLEVBQUEsYUFBQUcsRUFBQVUsT0FBQSx3Q0FDQW5CLEVBQUFVLEtBQUFELEVBQUFXLFNBQUEsU0FBQVQsRUFBQVUsR0FDQXJCLEVBQUEsaUJBQUFjLE9BQUEsZ0RBQUFSLEVBQUEsU0FBQWUsRUFBQUMsR0FBQSxPQUFBRCxFQUFBTixNQUFBLFFBQUFNLEVBQUFFLFVBQUEsSUFBQUYsRUFBQUcsTUFBQSxrQkFNQUMsS0FBQSxXQUNBekIsRUFBQSxpQkFBQWMsT0FBQSw4REFLQWEsT0FBQTFCLE9BQUFDIiwiZmlsZSI6InNjcmlwdHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgkLCB3aW5kb3csIGRvY3VtZW50LCB1bmRlZmluZWQpIHtcblxuICAndXNlIHN0cmljdCc7XG5cbiAgJChmdW5jdGlvbiAoKSB7XG4gICAgJCgnc2VsZWN0LnNpdGUtc2VsZWN0JykuY2hhbmdlKGZ1bmN0aW9uKCkge1xuICAgICAgJCgnLmpzb24tcmVzdWx0cycpLmh0bWwoJycpO1xuICAgICAgdmFyIHNpdGUgPSAkKCdzZWxlY3RbbmFtZT1kcm9wZG93bl0nKS52YWwoKTtcbiAgICAgICQoJy5zaXRlLXRpdGxlJykuaHRtbCgnPGgxPicgKyBzaXRlICsgJzwvaDE+Jyk7XG4gICAgICAkLmdldEpTT04oc2l0ZSArICcvcHJvZHVjdHMuanNvbicsIGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgJC5lYWNoKGRhdGEsIGZ1bmN0aW9uKGtleSwgZGF0YSkge1xuICAgICAgICAgIGlmKGRhdGEubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAkKCcuanNvbi1yZXN1bHRzJykuaHRtbCgnPGgxPk5vIFByb2R1Y3RzIFlldDwvaDE+Jyk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAkLmVhY2goZGF0YSwgZnVuY3Rpb24gKGluZGV4LCBkYXRhKSB7XG4gICAgICAgICAgICAkKCcuanNvbi1yZXN1bHRzJykuYXBwZW5kKCc8ZGl2IGNsYXNzPVwicHJvZHVjdFwiPicgKyAnPGgzPicgKyBkYXRhLnRpdGxlICsgJzwvaDM+JyArICc8aW1nIHNyYz1cIicgKyBkYXRhLmltYWdlc1swXS5zcmMgKyAnXCIgLz4nICsgICc8bGk+JyArICcgJyArIGRhdGEudGFncyArICc8L2xpPicgKyAnPGEgdGFyZ2V0PV9ibGFuayBocmVmPVwiJyArIHNpdGUgKyAnL3Byb2R1Y3RzLycgKyBkYXRhLmhhbmRsZSArICdcIj5QUk9EVUNUIFBBR0U8L2E+PGJyIC8+PC9kaXY+PGJyIC8+Jyk7XG4gICAgICAgICAgICAkLmVhY2goZGF0YS52YXJpYW50cywgZnVuY3Rpb24oa2V5LCB2YXJpYW50KXtcbiAgICAgICAgICAgICAgJCgnLmpzb24tcmVzdWx0cycpLmFwcGVuZCgnPGRpdiBjbGFzcz1cInZhcmlhbnRzXCI+PGEgdGFyZ2V0PV9ibGFuayBocmVmPVwiJyArIHNpdGUgKyAnL2NhcnQvJyArIHZhcmlhbnQuaWQgICsgJzoxXCI+JyArIHZhcmlhbnQudGl0bGUgKyAnPC9hPicgKyAnICcgKyAgdmFyaWFudC5hdmFpbGFibGUgKyAnICcgKyB2YXJpYW50LnByaWNlICsgICc8L2Rpdj4nKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KVxuICAgICAgLmZhaWwoZnVuY3Rpb24oKSB7XG4gICAgICAgICQoJy5qc29uLXJlc3VsdHMnKS5hcHBlbmQoJzxsaT5BbiBFcnJvciBPY2N1cnJlZC4gQ2hlY2sgc2l0ZSBmb3IgZGV0YWlscy48L2xpPicpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gICAgJCgnYnV0dG9uW25hbWU9XCJyZWZyZXNoXCJdJykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XG4gICAgICAkKCcuanNvbi1yZXN1bHRzJykuaHRtbCgnJyk7XG4gICAgICB2YXIgc2l0ZSA9ICQoJ3NlbGVjdFtuYW1lPWRyb3Bkb3duXScpLnZhbCgpO1xuICAgICAgJCgnLnNpdGUtdGl0bGUnKS5odG1sKCc8aDE+JyArIHNpdGUgKyAnPC9oMT4nKTtcbiAgICAgICQuZ2V0SlNPTihzaXRlICsgJy9wcm9kdWN0cy5qc29uJywgZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAkLmVhY2goZGF0YSwgZnVuY3Rpb24oa2V5LCBkYXRhKSB7XG4gICAgICAgICAgaWYoZGF0YS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICQoJy5qc29uLXJlc3VsdHMnKS5odG1sKCc8aDE+Tm8gUHJvZHVjdHMgWWV0PC9oMT4nKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICQuZWFjaChkYXRhLCBmdW5jdGlvbiAoaW5kZXgsIGRhdGEpIHtcbiAgICAgICAgICAgICQoJy5qc29uLXJlc3VsdHMnKS5hcHBlbmQoJzxkaXYgY2xhc3M9XCJwcm9kdWN0XCI+JyArICc8aDM+JyArIGRhdGEudGl0bGUgKyAnPC9oMz4nICsgJzxpbWcgc3JjPVwiJyArIGRhdGEuaW1hZ2VzWzBdLnNyYyArICdcIiAvPicgKyAgJzxsaT4nICsgJyAnICsgZGF0YS50YWdzICsgJzwvbGk+JyArICc8YSB0YXJnZXQ9X2JsYW5rIGhyZWY9XCInICsgc2l0ZSArICcvcHJvZHVjdHMvJyArIGRhdGEuaGFuZGxlICsgJ1wiPlBST0RVQ1QgUEFHRTwvYT48YnIgLz48L2Rpdj48YnIgLz4nKTtcbiAgICAgICAgICAgICQuZWFjaChkYXRhLnZhcmlhbnRzLCBmdW5jdGlvbihrZXksIHZhcmlhbnQpe1xuICAgICAgICAgICAgICAkKCcuanNvbi1yZXN1bHRzJykuYXBwZW5kKCc8ZGl2IGNsYXNzPVwidmFyaWFudHNcIj48YSB0YXJnZXQ9X2JsYW5rIGhyZWY9XCInICsgc2l0ZSArICcvY2FydC8nICsgdmFyaWFudC5pZCAgKyAnOjFcIj4nICsgdmFyaWFudC50aXRsZSArICc8L2E+JyArICcgJyArICB2YXJpYW50LmF2YWlsYWJsZSArICcgJyArIHZhcmlhbnQucHJpY2UgKyAgJzwvZGl2PicpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pXG4gICAgICAuZmFpbChmdW5jdGlvbigpIHtcbiAgICAgICAgJCgnLmpzb24tcmVzdWx0cycpLmFwcGVuZCgnPGxpPkFuIEVycm9yIE9jY3VycmVkLiBDaGVjayBzaXRlIGZvciBkZXRhaWxzLjwvbGk+Jyk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG5cbn0pKGpRdWVyeSwgd2luZG93LCBkb2N1bWVudCk7XG4iXX0=
